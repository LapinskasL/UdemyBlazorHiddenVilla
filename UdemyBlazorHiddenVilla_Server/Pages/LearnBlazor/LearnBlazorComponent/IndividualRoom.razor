@using UdemyBlazorHiddenVilla_Server.Model

<div class="col-4 border p-2 bg-light offset-1">
    <h4 class="text-muted">Room - @Room.Id</h4>
    <input type="checkbox" @onchange="RoomCheckBoxSelectionChanged" />
    <div>@Room.RoomName</div>
    <div>@Room.Price.ToString("c")</div>
    <div>
        <input type="checkbox" @bind-value="Room.IsActive" @bind-value:event="oninput" checked="@(Room.IsActive?"checked":null)" /> Is Active
        <div>The room is @(Room.IsActive?"Active":"Inactive")</div>
    </div>
    @if (Room.IsActive)
    {
        foreach (var roomProp in Room.RoomProps)
        {
            <div>@roomProp.Name - @roomProp.Value</div>
        }
    }
    <EditDeleteButton IsAdmin="false"></EditDeleteButton>
</div>

@code {
    [Parameter]
    public BlazorRoom Room { get; set; }

    [Parameter]
    public EventCallback<bool> OnRoomCheckBoxSelection { get; set; }

    protected async Task RoomCheckBoxSelectionChanged(ChangeEventArgs e)
    {
        await OnRoomCheckBoxSelection.InvokeAsync((bool)e.Value);
    }
}
